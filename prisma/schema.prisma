// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id String @default(uuid()) @unique @id
  username String @unique
  nickname String?
  role  Role @default(ANNOTATOR)
  accepted_en  BO_EN_Text[]   @relation("UserTranslatedText")
  rejected_en BO_EN_Text[]   @relation("UserRejectedText")
  ignored_en  BO_EN_Text[]   @relation("UserIgnoredText")
  accepted_bo  EN_BO_Text[]   @relation("UserTranslatedText")
  rejected_bo EN_BO_Text[]   @relation("UserRejectedText")
  ignored_bo  EN_BO_Text[]   @relation("UserIgnoredText")
  assigned_en BO_EN_Text[]   @relation("UserAssignedBO_EN")
  assigned_bo EN_BO_Text[]   @relation("UserAssignedEN_BO")

  isActive Boolean @default(false)
}

model BO_EN_Text{
  id Int @default(autoincrement()) @unique @id
  transcriber User? @relation("UserAssignedBO_EN",fields: [transcriber_id], references: [id])
  transcriber_id String?
  original_text String 
  name String  
  status Status?
  translated String?
  translated_by    User?    @relation("UserTranslatedText", fields: [translated_by_id], references: [id])
  translated_by_id String?
  duration       String?
  rejected_by    User[]   @relation("UserRejectedText")
  ignored_by     User[]   @relation("UserIgnoredText")
}


model EN_BO_Text{
  id Int @default(autoincrement()) @unique @id
  transcriber User? @relation("UserAssignedEN_BO",fields: [transcriber_id], references: [id])
  transcriber_id String?
  name String 
  original_text String 
  status         Status?
  translated String?
  translated_by    User?    @relation("UserTranslatedText", fields: [translated_by_id], references: [id])
  translated_by_id String?
  duration        String?
  rejected_by    User[]   @relation("UserRejectedText")
  ignored_by     User[]   @relation("UserIgnoredText")
}

enum Status {
  PENDING
  APPROVED
  REJECTED
}

enum Role {
  ADMIN
  USER
  REVIEWER
  ANNOTATOR
}